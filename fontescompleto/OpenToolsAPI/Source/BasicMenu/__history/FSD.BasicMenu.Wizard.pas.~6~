unit FSD.BasicMenu.Wizard;

interface

uses
  ToolsAPI,
  System.SysUtils,
  System.Classes,
  Winapi.Windows,
  Winapi.ShellAPI,
  Vcl.Menus,
  Vcl.Dialogs, Vcl.ActnList;

type TFSDBasicMenuWizard = class(TNotifierObject, IOTAWizard, IOTAMenuWizard)

  protected
    procedure OnClickToolbar(Sender: TObject);

    function GetIDString: string;
    function GetName: string;
    function GetState: TWizardState;

    procedure Execute;

    function GetMenuText: string;

  public
    constructor create;
    class function New: IOTAWizard;
end;

procedure RegisterBasicMenuWizard;

implementation

procedure RegisterBasicMenuWizard;
begin
  RegisterPackageWizard(TFSDBasicMenuWizard.New);
end;

{ TFSDBasicMenuWizard }

constructor TFSDBasicMenuWizard.create;
var
  action : TCustomAction;
begin
  action := TCustomAction.Create(nil);
  action.Name := 'actFsdTest';
  action.Hint := 'Teste';
  action.ImageIndex := 1;
  action.OnExecute := OnClickToolbar;

  (BorlandIDEServices AS INTAServices)
    .AddToolButton(sStandardToolBar, 'fsdTest', action);

end;

procedure TFSDBasicMenuWizard.Execute;
begin
  ShellExecute(HInstance, 'open', 'http://www.youtube.com', nil, nil, SW_SHOWNORMAL);
end;

function TFSDBasicMenuWizard.GetIDString: string;
begin
  result := Self.ClassName;
end;

function TFSDBasicMenuWizard.GetMenuText: string;
begin
  result := 'Formação Senior Developer';
end;

function TFSDBasicMenuWizard.GetName: string;
begin
  result := 'Basic Menu';
end;

function TFSDBasicMenuWizard.GetState: TWizardState;
begin
  Result := [wsEnabled];
end;

class function TFSDBasicMenuWizard.New: IOTAWizard;
begin
  result := Self.Create;
end;

procedure TFSDBasicMenuWizard.OnClickToolbar(Sender: TObject);
begin
  ShowMessage('oi');
end;

end.
